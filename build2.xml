<?xml version="1.0" encoding="UTF-8" ?>
<project name="JUnit_in_Action" default="test" basedir=".">
	<description>Beispiel eines Ant-Buildes</description>
	<!-- Project properties -->
	<property file="build.properties" />
	<path id="class.path">
		<fileset dir="${lib.dir}" includes="*.jar" />
	</path>
	<path id="jar.class.path">
		<fileset dir="${lib.dir}" includes="*.jar" />
	</path>
	<path id="jar.file">
		<fileset file="${jar.dir}/${ant.project.name}-${app.version}.jar" />
	</path>
	<path id="junit.classpath">
		<fileset dir="${lib.dir}">
			<include name="*.jar" />
		</fileset>
	</path>
	<target name="init" description="Prepare needed directories">
		<mkdir dir="${build.dir}" />
		<mkdir dir="${classes.dir}" />
		<mkdir dir="${jar.dir}" />
		<mkdir dir="${jar.class.path.dir}" />
		<mkdir dir="${reports.xml.dir}" />
		<mkdir dir="${reports.html.dir}" />
		<mkdir dir="${inst.dir}" />
		<mkdir dir="${cob.rep.html}" />
		<mkdir dir="${cob.rep.xml}" />
	</target>
	<target name="clean" description="Remove all files created by the build/test process.">
		<delete dir="${build.dir}" />
		<delete dir="${reports.dir}" />
		<delete dir="${cobdata}" />
		<delete dir="${inst.dir}" />
		<delete dir="${cob.rep}" />
	</target>
	<target name="compile" depends="init">
		<javac srcdir="${src.dir}" destdir="${classes.dir}" debug="yes">
			<classpath refid="junit.classpath" />
		</javac>
		<javac srcdir="${test.dir}" destdir="${classes.dir}" debug="yes">
			<classpath refid="junit.classpath" />
		</javac>
	</target>
	<target name="test" depends="compile">
		<junit>
			<sysproperty key="net.sourceforge.cobertura.datafile" file="${cobdata}" />
			<classpath location="${inst.dir}" />
			<classpath location="${classes.dir}" />
			<classpath refid="junit.classpath" />
			<formatter type="xml" />
			<batchtest fork="yes" todir="${reports.xml.dir}">
				<fileset dir="${test.dir}">
					<include name="**/*Test.java" />
				</fileset>
			</batchtest>
		</junit>
		<junitreport todir="${reports.xml.dir}">
			<fileset dir="${reports.xml.dir}">
				<include name="TEST*.xml" />
			</fileset>
			<report format="frames" todir="${reports.html.dir}" />
		</junitreport>
		<fail message="Tests failed. Check log and/or reports." if="test.failed" />
	</target>
	<taskdef classpathref="junit.classpath" resource="tasks.properties" />
	<target name="cob-instr" depends="compile">
		<cobertura-instrument todir="${inst.dir}" datafile="${cobdata}">
			<fileset dir="${classes.dir}">
				<include name="**/*.class" />
				<exclude name="**/*Test.class" />
				<exclude name="**/*Suite.class" />
			</fileset>
		</cobertura-instrument>
	</target>
	<target name="cob-rep" depends="cob-instr, test" description="Cob Rep">
		<cobertura-report format="html" datafile="${cobdata}" destdir="${cob.rep.html}" srcdir="${src.dir}" />
	</target>
	<!-- Java Archive -->
	<target name="jar" depends="compile">
		<delete file="${jar.dir}/${ant.project.name}-${app.version}.jar" />
		<!-- Copy libraries to application's class-path -->
		<copy todir="${jar.class.path.dir}">
			<fileset dir="${lib.dir}" />
		</copy>
		<!-- ManifestClassPath Ant Task -->
		<manifestclasspath property="manifest.class.path" jarfile="{$jar.file}">
			<classpath refid="jar.class.path" />
		</manifestclasspath>
		<jar destfile="${jar.dir}/${ant.project.name}-${app.version}.jar" basedir="${classes.dir}">
			<manifest>
				<attribute name="Main-Class" value="${main.class}" />
				<attribute name="Class-Path" value="${manifest.class.path}" />
			</manifest>
		</jar>
		<echo message="========== Done Building (JAR) ==========" />
	</target>
	<target name="run" depends="jar">
		<java fork="true" classname="${main.class}">
			<classpath>
				<path refid="class.path" />
				<path refid="jar.file" />
			</classpath>
		</java>
	</target>
	<!-- Generating Javadoc -->
	<target name="javadoc" description="Generate Javadoc.">
		<mkdir dir="${docs.dir}" />
		<mkdir dir="${javadoc.dir}" />
		<javadoc sourcepath="${src.dir}" classpathref="class.path" destdir="${javadoc.dir}" access="public" version="true" author="true" windowtitle="${ant.project.name} - Version ${app.version}" doctitle="${ant.project.name} - Version ${app.version}" packagenames="*">
		</javadoc>
		<echo message="========== Done Generating (Javadoc) ==========" />
	</target>
</project>